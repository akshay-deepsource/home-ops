---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 34.10.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    alertmanager:
      config:
        global:
          resolve_timeout: 5m
        receivers:
          - name: "null"
          - name: "pushover"
            pushover_configs:
              - token: "${SECRET_PUSHOVER_ALERT_MANAGER_APIKEY}"
                user_key: "${SECRET_PUSHOVER_USERKEY}"
                send_resolved: true
                html: true
                priority: |-
                  {{ if eq .Status "firing" }}1{{ else }}0{{ end }}
                url_title: View alert in Karma
                url: |-
                  https://karma.${SECRET_PUBLIC_DOMAIN}/?q=%40receiver%3D{{ .Receiver | urlquery }}&q=%40state%3Dactive
                title: |-
                  [{{ .Status | toUpper -}}
                  {{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{- end -}}
                  ] {{ .CommonLabels.alertname }}
                message: |-
                  {{- range .Alerts }}
                    {{- if ne .Labels.severity "" }}
                      <b>Severity:</b> <i>{{ .Labels.severity }}</i>
                    {{- else }}
                      <b>Severity:</b> <i>N/A</i>
                    {{- end }}
                    {{- if ne .Annotations.description "" }}
                      <b>Description:</b> <i>{{ .Annotations.description }}</i>
                    {{- else if ne .Annotations.summary "" }}
                      <b>Summary:</b> <i>{{ .Annotations.summary }}</i>
                    {{- else if ne .Annotations.message "" }}
                      <b>Message:</b> <i>{{ .Annotations.message }}</i>
                    {{- else }}
                      <b>Description:</b> <i>N/A</i>
                    {{- end }}
                    {{- if gt (len .Labels.SortedPairs) 0 }}
                      <b>Details:</b>
                      {{- range .Labels.SortedPairs }}
                        â€¢ <b>{{ .Name }}:</b> <i>{{ .Value }}</i>
                      {{- end }}
                    {{- end }}
                  {{- end }}
        route:
          group_by: ["alertname", "job"]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: "pushover"
          routes:
            - receiver: "null"
              matchers:
                - alertname =~ "InfoInhibitor|Watchdog"
            - receiver: "pushover"
              matchers:
                - severity = "critical"
              continue: true
        inhibit_rules:
          - source_matchers:
              - severity = "critical"
            target_matchers:
              - severity = "warning"
            equal: ["alertname", "namespace"]
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - &host "alert-manager.${SECRET_PUBLIC_DOMAIN}"
        tls:
          - hosts:
              - *host
            secretName: alert-manager-tls
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: "ceph-block"
              resources:
                requests:
                  storage: 1Gi
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            etcd:
              enabled: true
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: true
      endpoints:
        - 10.10.10.20
        - 10.10.10.21
        - 10.10.10.26
    kubeScheduler:
      enabled: true
      endpoints:
        - 10.10.10.20
        - 10.10.10.21
        - 10.10.10.26
    kubeProxy:
      enabled: false
      endpoints:
        - 10.10.10.20
        - 10.10.10.21
        - 10.10.10.26
      service:
        enabled: true
        port: 10249
        targetPort: 10249
    kubeEtcd:
      enabled: true
      endpoints:
        - 10.10.10.20
        - 10.10.10.21
        - 10.10.10.26
      service:
        enabled: true
        port: 2381
        targetPort: 2381
    prometheusOperator:
      prometheusConfigReloader:
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
          limits:
            cpu: 200m
            memory: 100Mi
    prometheus:
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - &host "prometheus.${SECRET_PUBLIC_DOMAIN}"
        tls:
          - hosts:
              - *host
            secretName: "prometheus-tls"
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
      prometheusSpec:
        replicas: 1
        replicaExternalLabelName: "replica"
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 6h
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: "ceph-block"
              resources:
                requests:
                  storage: 10Gi
        thanos:
          image: quay.io/thanos/thanos:v0.25.2
          version: v0.22.0
          objectStorageConfig:
            name: thanos-objstore
            key: objstore.yml
        additionalScrapeConfigs:
          - job_name: cadvisor
            honor_timestamps: true
            static_configs:
              - targets:
                  - "osiris.${SECRET_PRIVATE_DOMAIN}:8005"
          - job_name: coredns
            honor_timestamps: true
            static_configs:
              - targets:
                  - "opnsense.${SECRET_PRIVATE_DOMAIN}:9153"
          - job_name: minio
            honor_timestamps: true
            metrics_path: /minio/v2/metrics/cluster
            static_configs:
              - targets:
                  - "osiris.${SECRET_PRIVATE_DOMAIN}:9000"
          - job_name: node-exporter
            honor_timestamps: true
            static_configs:
              - targets:
                  - "opnsense.${SECRET_PRIVATE_DOMAIN}:9100"
                  - "osiris.${SECRET_PRIVATE_DOMAIN}:9100"
          - job_name: postgresql
            honor_timestamps: true
            static_configs:
              - targets:
                  - "osiris.${SECRET_PRIVATE_DOMAIN}:9187"
          - job_name: vault
            metrics_path: /v1/sys/metrics
            params:
              format:
                - prometheus
            static_configs:
              - targets:
                  - "osiris.${SECRET_PRIVATE_DOMAIN}:8200"
          - job_name: traefik
            honor_timestamps: true
            static_configs:
              - targets:
                  - "osiris.${SECRET_PRIVATE_DOMAIN}:7071"
          - job_name: nexus
            metrics_path: /service/metrics/prometheus
            basic_auth:
              username: "${SECRET_NEXUS_USERNAME}"
              password: "${SECRET_NEXUS_PASSWORD}"
            static_configs:
              - targets:
                  - "osiris.${SECRET_PRIVATE_DOMAIN}:8081"
