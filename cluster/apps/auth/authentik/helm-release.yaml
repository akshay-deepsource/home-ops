---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: auth
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io
      chart: authentik
      version: 5.1.1
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: ghcr.io/goauthentik/server
      tag: 2021.12.4
      pullPolicy: IfNotPresent
    ingress:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          hajimari.io/enable: "true"
          hajimari.io/icon: "account-lock-outline"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN_STUDIO}"
          external-dns/is-public: "true"
        hosts:
          - host: "auth.${SECRET_DOMAIN_STUDIO}"
            paths:
              - path: "/"
                pathType: Prefix
        tls:
          - hosts:
              - "auth.${SECRET_DOMAIN_STUDIO}"
            secretName: authentik-tls 
    authentik:
      secret_key: "${SECRET_AUTHENTIK_KEY}"
      email:
        host: "in-v3.mailjet.com"
        port: 587
        username: "${SECRET_EMAIL_USERNAME}"
        password: "${SECRET_EMAIL_PASSWORD}"
        use_ssl: true
        from: "no-reply@${SECRET_DOMAIN_STUDIO}"
      error_reporting:
        enabled: true
        sendpii: true
      postgresql:
        user: "postgres"
        password: "${SECRET_AUTHENTIK_POSTGRES_PASSWORD}"
        s3_backup:
          bucket: "authentik"
          access_key: ${SECRET_S3_KEY}
          secret_key: ${SECRET_S3_SECRET_KEY}
          host: "http://192.168.1.147:9768"
          insecure_skip_verify: true
    geoip:
      enabled: true
      accountId: "418977"
      licenseKey: "${SECRET_GEOIP_KEY}"
    postgresql:
      enabled: true
      postgresqlUsername: "postgres"
      postgresqlPassword: "${SECRET_AUTHENTIK_POSTGRES_PASSWORD}"
      persistence:
        enabled: true
        existingClaim: authentik-postgres-v1
    redis:
      enabled: true
      persistence:
        enabled: true
        existingClaim: authentik-redis-v1
    prometheus:
      serviceMonitor:
        create: true
        interval: 30s
        scrapeTimeout: 3s
      rules:
        create: true
